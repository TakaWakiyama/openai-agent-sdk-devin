import os
import subprocess
import shutil
import time
import requests


def run_codex_and_create_pr(repo, instruction, github_token, openai_api_key):
    """
    指定リポジトリに対しCodex CLIでコード修正を行い、GitHubにPRを作成し、そのURLを返す。
    """
    work_dir = f"/tmp/work_{os.getpid()}"
    os.makedirs(work_dir, exist_ok=True)
    repo_url = f"https://{github_token}@github.com/{repo}.git"
    result = subprocess.run([
        "git", "clone", repo_url, "repo"
    ], cwd=work_dir)
    if result.returncode != 0:
        shutil.rmtree(work_dir, ignore_errors=True)
        return None
    repo_path = os.path.join(work_dir, "repo")
    env = os.environ.copy()
    env["OPENAI_API_KEY"] = openai_api_key
    codex_cmd = ["codex", "--full-auto", instruction]
    try:
        result = subprocess.run(
            codex_cmd, cwd=repo_path, env=env,
            capture_output=True, text=True, timeout=300
        )
    except Exception:
        shutil.rmtree(work_dir, ignore_errors=True)
        return None
    branch = "codex-fix-" + str(int(time.time()))
    subprocess.run(["git", "checkout", "-b", branch], cwd=repo_path)
    subprocess.run(["git", "add", "-A"], cwd=repo_path)
    subprocess.run([
        "git", "commit", "-m", f"Codex auto fix: {instruction[:50]}"
    ], cwd=repo_path)
    subprocess.run(["git", "push", "origin", branch], cwd=repo_path)
    pr_title = f"Codex Fix: {instruction[:50]}"
    pr_body = "This PR was automatically generated by Codex CLI."
    api_url = f"https://api.github.com/repos/{repo}/pulls"
    headers = {"Authorization": f"token {github_token}"}
    payload = {
        "title": pr_title,
        "head": branch,
        "base": "main",
        "body": pr_body
    }
    resp = requests.post(api_url, json=payload, headers=headers)
    pr_url = None
    if resp.status_code == 201:
        pr_url = resp.json().get("html_url")
    shutil.rmtree(work_dir, ignore_errors=True)
    return pr_url